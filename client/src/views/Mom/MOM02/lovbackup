import React, { Component } from 'react'

import { Badge, Card, Table, CardBody, Pagination, PaginationItem, PaginationLink } from 'reactstrap';

class lov extends Component {
    constructor(props) {
        super(props)

        this.state = {
            lovText: '',
            url: '',
            data: [],
            param: ''
        }

        this.hideLov = this.hideLov.bind(this)
        this.getDataFromDb = this.getDataFromDb.bind(this)
        this.handleDataCallBack = this.handleDataCallBack.bind(this)
        // console.log('Contructor');
        // console.log(this.state)

    }


    componentWillMount() {
        // console.log('Component WILL MOUNT')
        // console.log(this.state)
        const { data } = this.props // data itu variable yang kita kirim, harus sama dengan yang dari parent
        const { url } = this.props
        const { param } = this.props
        this.setState({
            lovText: data,
            url: url,
            param: param
        })

    }
    componentDidMount() { // funtion yang di panggil ketika telah diload
        // console.log('Didmount');
        // console.log(this.state)
        this.getDataFromDb()

    }
    componentWillReceiveProps(newProps) {
        // console.log('Receive props')
        // console.log(this.state)

    }
    componentWillUpdate(nextProps, nextState) {
        // console.log('Component WILL UPDATE!');
        // console.log(this.state)

    }
    componentDidUpdate(prevProps, prevState) {
        // console.log('Component DID UPDATE!')
        // console.log(this.state)


    }

    getDataFromDb() {
        // console.log("getData")
        fetch(this.state.url, {
            method: 'post',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                "projectionField": 'username createdAt role',
                "limit": 10,
                "param": this.state.lovText
            })
        })
            .then(data => data.json())
            .then(res => this.setState({ data: res.data }))
            .then(res => this.state.param == "" ? this.hideLov() : this.state.data.length == 0 ? this.hideLov() : console.log('ada isinya'))

        // console.log(this.state)
    }

    hideLov(event) {
        this.props.dataCountCallBack(false)
    }
    handleDataCallBack(event) {
        event.preventDefault()
        const song = event.target.getAttribute;
        console.log(song)
        // this.props.dataRowCallBack(data)
    }

    render() {
        // console.log('Render');
        const divStyle = {
            top: '30px',
            position: 'absolute',
            zIndex: 1
            // clear:'right'
        };

        return (
            <div style={divStyle} >
                <Card>
                    <Table responsive bordered>
                        <thead>
                            <tr>
                                <th >Username</th>
                                <th>Date registered</th>
                                <th>Role</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            {
                                (this.state.data || []).map((item, i) => (
                                    <tr onMouseDown={this.handleDataCallBack}  key={i}>
                                        <td >{item.username}</td>
                                        <td>{item.createdAt}</td>
                                        <td>{item.role == 0 ? "User" : item.role == 1 ? 'Admin' : 'Super Admin'}</td>
                                        <td>
                                            <Badge  color="success">Active</Badge>
                                        </td>
                                    </tr>
                                ))}
                        </tbody>
                    </Table>
                    <Pagination>
                        <PaginationItem><PaginationLink previous tag="button">Prev</PaginationLink></PaginationItem>
                        <PaginationItem active>
                            <PaginationLink tag="button">1</PaginationLink>
                        </PaginationItem>
                        <PaginationItem className="page-item"><PaginationLink tag="button">2</PaginationLink></PaginationItem>
                        <PaginationItem><PaginationLink tag="button">3</PaginationLink></PaginationItem>
                        <PaginationItem><PaginationLink tag="button">4</PaginationLink></PaginationItem>
                        <PaginationItem><PaginationLink next tag="button">Next</PaginationLink></PaginationItem>
                    </Pagination>
                    <h1>{this.state.data ? this.state.data.length : ''}</h1>
                </Card>
            </div>
        )
    }
}

export default lov
